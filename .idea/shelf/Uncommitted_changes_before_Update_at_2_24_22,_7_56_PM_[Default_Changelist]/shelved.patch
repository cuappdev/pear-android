Index: app/src/main/java/com/cornellappdev/coffee_chats_android/SchedulingActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cornellappdev.coffee_chats_android\n\nimport android.app.Activity\nimport android.content.Intent\nimport android.content.res.Resources\nimport android.os.Bundle\nimport android.util.TypedValue\nimport android.view.View\nimport androidx.appcompat.app.ActionBarDrawerToggle\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.constraintlayout.widget.ConstraintLayout\nimport androidx.core.content.ContextCompat\nimport androidx.fragment.app.Fragment\nimport androidx.fragment.app.FragmentTransaction\nimport com.bumptech.glide.Glide\nimport com.cornellappdev.coffee_chats_android.fragments.NoMatchFragment\nimport com.cornellappdev.coffee_chats_android.fragments.ProfileFragment\nimport com.cornellappdev.coffee_chats_android.fragments.SchedulingPlaceFragment\nimport com.cornellappdev.coffee_chats_android.fragments.SchedulingTimeFragment\nimport com.cornellappdev.coffee_chats_android.models.User\nimport com.cornellappdev.coffee_chats_android.networking.getUser\nimport com.cornellappdev.coffee_chats_android.networking.setUpNetworking\nimport com.google.android.gms.auth.api.signin.GoogleSignIn\nimport com.google.android.material.navigation.NavigationView\nimport kotlinx.android.synthetic.main.activity_scheduling.*\nimport kotlinx.android.synthetic.main.nav_header_profile.view.*\nimport kotlinx.coroutines.CoroutineScope\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.launch\n\n\nclass SchedulingActivity :\n    AppCompatActivity(),\n    OnFilledOutListener {\n    private lateinit var user: User\n    private var page = 0        // 0: no match; 1: time scheduling; 2: place scheduling\n    private val ft: FragmentTransaction = supportFragmentManager.beginTransaction()\n    private val preferencesHelper: PreferencesHelper by lazy {\n        PreferencesHelper(this)\n    }\n    private val noMatchTag = \"NO_MATCH\"\n    private val matchTag = \"MATCH\"\n    private val scheduleTimeTag = \"SCHEDULING_TIME\"\n    private val schedulePlaceTag = \"SCHEDULING_PLACE\"\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_scheduling)\n\n        // determine if the app should show scheduling page, sign-in, or onboarding\n\n        val account = GoogleSignIn.getLastSignedInAccount(this)\n        if (account != null && preferencesHelper.accessToken != null && preferencesHelper.accessToken!!.isNotEmpty()) {\n            // user is already signed in - get user profile\n            CoroutineScope(Dispatchers.Main).launch {\n                setUpNetworking(preferencesHelper.accessToken!!)\n                user = getUser()\n                // move to onboarding if user hasn't finished\n                if (!user.hasOnboarded) {\n                    val intent = Intent(applicationContext, OnboardingActivity::class.java)\n                    intent.putExtra(ACCESS_TOKEN_TAG, preferencesHelper.accessToken!!)\n                    startActivity(intent)\n                } else {\n                    setUpDrawerLayout()\n                    if (user.currentMatch == null) {\n                        primaryActionButton.visibility = View.GONE\n                        ft.add(fragmentContainer.id, NoMatchFragment()).addToBackStack(noMatchTag)\n                        ft.commit()\n                        headerText.text = getString(R.string.no_match_header)\n                    } else {\n                        ft.add(\n                            fragmentContainer.id,\n                            ProfileFragment.newInstance(user.currentMatch!!.matchedUser)\n                        ).addToBackStack(matchTag)\n                        ft.commit()\n                        headerText.text = getString(R.string.match_header)\n                    }\n                }\n            }\n        } else {\n            // prompt user to log in\n            signIn()\n        }\n\n        primaryActionButton.setOnClickListener {\n            onSendMessageClick()\n        }\n\n        // set up navigation view\n        val navigationView = findViewById<NavigationView>(R.id.nav_view)\n        navigationView.itemIconTintList = null\n        navigationView.setNavigationItemSelectedListener { menuItem ->\n            drawerLayout.close()\n            val intent = Intent(this, ProfileSettingsActivity::class.java)\n            val contentTag = when (menuItem.itemId) {\n                R.id.nav_interests -> ProfileSettingsActivity.Content.EDIT_INTERESTS\n                R.id.nav_groups -> ProfileSettingsActivity.Content.EDIT_GROUPS\n                R.id.nav_settings -> ProfileSettingsActivity.Content.SETTINGS\n                else -> null\n            }\n            contentTag?.let { intent.putExtra(ProfileSettingsActivity.CONTENT, contentTag) }\n            when (menuItem.itemId) {\n                R.id.nav_settings -> startActivityForResult(intent, SETTINGS_CODE)\n                R.id.nav_interests, R.id.nav_groups -> startActivity(intent)\n                R.id.nav_messages -> {\n                    val messagingIntent = Intent(this, MessagingActivity::class.java).apply {\n                        putExtra(MessagingActivity.STAGE, MessagingActivity.Stage.MESSAGES)\n                        putExtra(MessagingActivity.USER_ID, user.id)\n                    }\n                    startActivity(messagingIntent)\n                }\n            }\n            true\n        }\n\n        setUpCurrentPage()\n    }\n\n    override fun onNewIntent(intent: Intent?) {\n        super.onNewIntent(intent)\n        CoroutineScope(Dispatchers.Main).launch {\n            user = getUser()\n            setUpDrawerLayout()\n        }\n    }\n\n    /**\n     * Populates drawer layout with user information and adds a listener so the contents of the\n     * page move when the drawer slides.\n     */\n    private fun setUpDrawerLayout() {\n        Glide.with(applicationContext).load(user.profilePicUrl).centerInside().circleCrop()\n            .into(drawerLayout.user_image)\n        Glide.with(applicationContext).load(user.profilePicUrl).centerInside().circleCrop()\n            .into(backButton)\n        drawerLayout.user_name.text =\n            getString(R.string.user_name, user.firstName, user.lastName)\n        drawerLayout.user_major_year.text = getString(\n            R.string.user_major_year,\n            if (user.majors.isNotEmpty()) user.majors.first().name else \"\",\n            user.graduationYear\n        )\n        drawerLayout.user_hometown.text = getString(R.string.user_hometown, user.hometown)\n        val content = findViewById<ConstraintLayout>(R.id.activity_main)\n        drawerLayout.edit_info.setOnClickListener {\n            Intent(this, ProfileSettingsActivity::class.java).apply {\n                putExtra(ProfileSettingsActivity.CONTENT, ProfileSettingsActivity.Content.EDIT_INFO)\n                startActivity(this)\n            }\n        }\n        drawerLayout.addDrawerListener(object : ActionBarDrawerToggle(\n            this,\n            drawerLayout,\n            R.string.drawer_open,\n            R.string.drawer_close\n        ) {\n            override fun onDrawerSlide(drawerView: View, slideOffset: Float) {\n                super.onDrawerSlide(drawerView, slideOffset)\n                content.translationX = drawerView.width * slideOffset\n            }\n        })\n    }\n\n    /**\n     * Navigates to `SignInActivity`\n     */\n    private fun signIn() {\n        val intent = Intent(this, SignInActivity::class.java)\n        startActivity(intent)\n    }\n\n    override fun onAttachFragment(fragment: Fragment) {\n        if (fragment is OnFilledOutObservable) {\n            fragment.setOnFilledOutListener(this)\n        }\n    }\n\n    override fun onFilledOut() {\n        primaryActionButton.isEnabled = true\n    }\n\n    override fun onSelectionEmpty() {\n        primaryActionButton.isEnabled = false\n    }\n\n    override fun onBackPressed() {\n        if (drawerLayout.isOpen) {\n            drawerLayout.close()\n        } else if (page > 0) {\n            onBackPage()\n        } else {\n            finish()\n        }\n    }\n\n    override fun onResume() {\n        super.onResume()\n        if (drawerLayout.isOpen) {\n            drawerLayout.close()\n        }\n        if (::user.isInitialized) {\n            CoroutineScope(Dispatchers.Main).launch {\n                user = getUser()\n                setUpDrawerLayout()\n                setUpCurrentPage()\n            }\n        }\n    }\n\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n        super.onActivityResult(requestCode, resultCode, data)\n        // user has logged out from Settings\n        if (requestCode == SETTINGS_CODE && resultCode == Activity.RESULT_OK) {\n            preferencesHelper.clearLogin()\n            signIn()\n        }\n    }\n\n    private fun onBackPage() {\n        page--\n        supportFragmentManager.popBackStack()\n        setUpCurrentPage()\n    }\n\n    private fun onSendMessageClick() {\n        user.currentMatch?.let {\n            val match = it.matchedUser\n            val messagingIntent = Intent(this, MessagingActivity::class.java).apply {\n                putExtra(MessagingActivity.STAGE, MessagingActivity.Stage.CHAT)\n                putExtra(MessagingActivity.USER_ID, user.id)\n                putExtra(MessagingActivity.PEAR_ID, match.id)\n                putExtra(MessagingActivity.PEAR_FIRST_NAME, match.firstName)\n                putExtra(MessagingActivity.PEAR_PROFILE_PIC_URL, match.profilePicUrl)\n            }\n            startActivity(messagingIntent)\n        }\n    }\n\n    private fun onNextPage() {\n        if (page == 2) {\n            val locationFragment =\n                supportFragmentManager.findFragmentByTag(schedulePlaceTag) as SchedulingPlaceFragment\n            locationFragment.saveInformation()\n            page = 0\n            setUpCurrentPage()\n            supportFragmentManager.popBackStack(noMatchTag, 0)\n            return\n        }\n        if (page < 2) page++\n        val ft: FragmentTransaction = supportFragmentManager.beginTransaction()\n        if (page == 1) {\n            ft.replace(fragmentContainer.id, SchedulingTimeFragment(), scheduleTimeTag)\n        } else {\n            val timeFragment =\n                supportFragmentManager.findFragmentByTag(scheduleTimeTag) as SchedulingTimeFragment\n            timeFragment.saveInformation()\n            ft.replace(fragmentContainer.id, SchedulingPlaceFragment(), schedulePlaceTag)\n        }\n        setUpCurrentPage()\n        ft.addToBackStack(\"ft\")\n        ft.commit()\n    }\n\n    private fun setUpCurrentPage() {\n        val displayMetrics = Resources.getSystem().displayMetrics\n        if (page == 0) {\n            backButton.background = ContextCompat.getDrawable(this, R.drawable.ic_sign_in_logo)\n            backButton.layoutParams = backButton.layoutParams.apply {\n                height = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 30f, displayMetrics)\n                    .toInt()\n                width = height\n            }\n            backButton.setOnClickListener {\n                if (drawerLayout.isOpen) {\n                    drawerLayout.close()\n                } else {\n                    drawerLayout.open()\n                }\n            }\n            primaryActionButton.text = getString(R.string.no_match_availability)\n            primaryActionButton.isEnabled = true\n            primaryActionButton.setPadding(100, 0, 100, 0)\n        } else {\n            backButton.background = ContextCompat.getDrawable(this, R.drawable.ic_back_carrot)\n            backButton.layoutParams = backButton.layoutParams.apply {\n                height = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 18f, displayMetrics)\n                    .toInt()\n                width = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 10f, displayMetrics)\n                    .toInt()\n            }\n            increaseHitArea(backButton)\n            backButton.setOnClickListener {\n                onBackPage()\n            }\n            primaryActionButton.isEnabled = false\n            primaryActionButton.setPadding(180, 0, 180, 0)\n            if (page == 1) {\n                headerText.text = getString(R.string.scheduling_time_header)\n                primaryActionButton.text = getString(R.string.scheduling_time_button)\n            } else {\n                headerText.text = getString(R.string.scheduling_place_header)\n                primaryActionButton.text = getString(R.string.scheduling_place_button)\n            }\n        }\n        primaryActionButton.text = getString(R.string.send_message)\n    }\n\n    companion object {\n        private const val SETTINGS_CODE = 10032\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cornellappdev/coffee_chats_android/SchedulingActivity.kt b/app/src/main/java/com/cornellappdev/coffee_chats_android/SchedulingActivity.kt
--- a/app/src/main/java/com/cornellappdev/coffee_chats_android/SchedulingActivity.kt	(revision ebe2790ceeb5c92d946da83039a2121b5436bd67)
+++ b/app/src/main/java/com/cornellappdev/coffee_chats_android/SchedulingActivity.kt	(date 1645635902575)
@@ -3,9 +3,16 @@
 import android.app.Activity
 import android.content.Intent
 import android.content.res.Resources
+import android.net.Uri
 import android.os.Bundle
 import android.util.TypedValue
+import android.view.ContextThemeWrapper
+import android.view.Gravity.CENTER
+import android.view.MenuInflater
 import android.view.View
+import android.widget.ImageButton
+import android.widget.PopupMenu
+import android.widget.Toast
 import androidx.appcompat.app.ActionBarDrawerToggle
 import androidx.appcompat.app.AppCompatActivity
 import androidx.constraintlayout.widget.ConstraintLayout
@@ -282,6 +289,7 @@
             primaryActionButton.setPadding(100, 0, 100, 0)
         } else {
             backButton.background = ContextCompat.getDrawable(this, R.drawable.ic_back_carrot)
+            feedbackButton.background = ContextCompat.getDrawable(this, R.drawable.ic_feedback_button)
             backButton.layoutParams = backButton.layoutParams.apply {
                 height = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 18f, displayMetrics)
                     .toInt()
@@ -289,9 +297,11 @@
                     .toInt()
             }
             increaseHitArea(backButton)
+            increaseHitArea(feedbackButton)
             backButton.setOnClickListener {
                 onBackPage()
             }
+
             primaryActionButton.isEnabled = false
             primaryActionButton.setPadding(180, 0, 180, 0)
             if (page == 1) {
@@ -303,7 +313,67 @@
             }
         }
         primaryActionButton.text = getString(R.string.send_message)
+        feedbackButton.visibility = View.VISIBLE
     }
+
+
+    fun showPopup(v: View) {
+
+        val wrapper = ContextThemeWrapper(this, R.style.popUpTheme_PopupMenu)
+        val popup = PopupMenu(wrapper, v)
+        popup.gravity = CENTER
+        val inflater: MenuInflater = popup.menuInflater
+        inflater.inflate(R.menu.feedback_menu, popup.menu)
+        popup.show()
+
+        popup.setOnMenuItemClickListener {
+            when(it.itemId) {
+                R.id.nav_send_feedback -> {
+                    //val url = "https://docs.google.com/forms/d/e/1FAIpQLSf49KRJQwugXqESmeRlZ8T6dSPHiZl-3BRA60WaOpMhmOjSeQ/viewform"
+                    val url = getString(R.string.form_url)
+                    val intent = Intent(Intent.ACTION_VIEW)
+                    intent.data = Uri.parse(url)
+                    startActivity(intent)
+                    true
+                }
+                R.id.nav_contact_us -> {
+                    sendEmail(getString(R.string.feedback_email), getString(R.string.contact_email_subject))
+                    true
+                }
+                R.id.nav_report_user -> {
+                    sendEmail(getString(R.string.feedback_email), getString(R.string.report_email_subject))
+                    true
+                }
+            }
+            false
+        }
+    }
+
+    private fun sendEmail(recipient: String, subject: String) {
+        /*ACTION_SEND action to launch an email client installed on your Android device.*/
+        val mIntent = Intent(Intent.ACTION_SEND)
+        /*To send an email you need to specify mailto: as URI using setData() method
+        and data type will be to text/plain using setType() method*/
+        mIntent.data = Uri.parse("mailto:")
+        mIntent.type = "text/plain"
+        // put recipient email in intent
+        /* recipient is put as array because you may wanna send email to multiple emails
+           so enter comma(,) separated emails, it will be stored in array*/
+        mIntent.putExtra(Intent.EXTRA_EMAIL, arrayOf(recipient))
+        //put the Subject in the intent
+        mIntent.putExtra(Intent.EXTRA_SUBJECT, subject)
+        try {
+            //start email intent
+            startActivity(Intent.createChooser(mIntent, "Select your Email app"))
+        }
+        catch (e: Exception){
+            //if any thing goes wrong for example no email client application or any exception
+            //get and show exception message
+            Toast.makeText(this, e.message, Toast.LENGTH_LONG).show()
+        }
+
+    }
+
 
     companion object {
         private const val SETTINGS_CODE = 10032
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\">Pear</string>\n\n    <!--CREATE PROFILE-->\n    <string name=\"welcome_header\">Welcome to Pear</string>\n    <string name=\"interests_header\">What do you love?</string>\n    <string name=\"almost_there\">Almost there</string>\n    <string name=\"groups_header\">What are you a part of?</string>\n    <string name=\"groups_search_query_hint\">Search</string>\n    <string name=\"ready_for_pear\">Ready for Pear</string>\n    <string name=\"go_back\">Go back</string>\n    <string name=\"demographics_header\">\"Hi %1$s!\\nLet's get to know you better.\"</string>\n    <string name=\"demographics_header_no_name\">\"Hi!\\nLet's get to know you better.\"</string>\n    <string name=\"goals_header\">How do you want to use Pear?</string>\n    <string name=\"talking_pointers_header\">What do you most want to talk about?</string>\n    <string name=\"add_later_button\">I\\'ll add later</string>\n    <string  name=\"upload_image\">Upload New Picture</string>\n    <string name=\"major\">Major</string>\n    <string name=\"hometown\">Hometown</string>\n    <!--INTERESTS-->\n    <string-array name=\"interest_titles\">\n        <item>Art</item>\n        <item>Business</item>\n        <item>Dance</item>\n        <item>Design</item>\n        <item>Fashion</item>\n        <item>Fitness &amp; Sports</item>\n        <item>Food</item>\n        <item>Humanities</item>\n        <item>Music</item>\n        <item>Photography</item>\n        <item>Reading</item>\n        <item>Sustainability</item>\n        <item>Tech</item>\n        <item>Travel</item>\n        <item>TV &amp; Film</item>\n    </string-array>\n    <string-array name=\"interest_subtitles\">\n        <item>painting, crafts, embroidery</item>\n        <item>entrepreneurship, finance, VC</item>\n        <item>urban, hip hop, ballet, swing</item>\n        <item>UX/UI, graphic, print</item>\n        <item>fashion</item>\n        <item>working out, outdoors, basketball</item>\n        <item>cooking, eating, baking</item>\n        <item>history, politics</item>\n        <item>instruments, producing, acapella</item>\n        <item>digital, analog</item>\n        <item>reading</item>\n        <item>sustainability</item>\n        <item>programming, web/app development</item>\n        <item>road, trips, backpacking</item>\n    </string-array>\n\n    <!--PROMPTS-->\n    <string name=\"prompts_header\">Let\\'s get to know you better!</string>\n    <string name=\"select_prompt\">Select a prompt</string>\n    <string name=\"enter_response\">Enter your response</string>\n    <string-array name=\"prompts\">\n        <item>Why are you on Pear?</item>\n        <item>Why should other students reach out to you?</item>\n        <item>How would you introduce yourself to someone new?</item>\n        <item>What do you like most about your major?</item>\n        <item>What do you hope to accomplish this semester?</item>\n        <item>What could you talk about for hours?</item>\n        <item>What\\'s a funny story with no context?</item>\n        <item>What are your most recent 5 emojis?</item>\n        <item>What\\'s your favorite food (besides pears)?</item>\n        <item>What are your go-to songs?</item>\n        <item>What are 3 things on your bucket list?</item>\n        <item>What\\'s something you want to do before you graduate?</item>\n        <item>Last book you read that you loved?</item>\n        <item>The last tv show series you watched?</item>\n        <item>When you were younger what did you want to be?</item>\n        <item>What is something about you that you take pride in?</item>\n        <item>What is a social cause that you care about?</item>\n        <item>If you could go anywhere in the world, where would you go?</item>\n        <item>Where do you spend time on campus?</item>\n        <item>What is your favorite restaurant?</item>\n        <item>What is something you want to learn?</item>\n        <item>What is a fact about you that surprises people?</item>\n        <item>What is your ideal day?</item>\n    </string-array>\n\n    <!--GOALS-->\n    <string-array name=\"goal_titles\">\n        <item>Just chatting</item>\n        <item>Finding my people</item>\n        <item>Meeting someone different</item>\n        <item>Learning from mentors</item>\n        <item>Guiding mentees</item>\n        <item>Not sure yet</item>\n    </string-array>\n\n    <!--SOCIAL MEDIA-->\n    <string name=\"social_media\">Social Media</string>\n    <string name=\"social_media_header\">Connect your social media</string>\n    <string name=\"social_media_blurb\">Help your Pear contact you by connecting your social media accounts. Your information will only be shared with the verified Cornell students you are paired with.</string>\n    <string name=\"instagram_handle\">\\@Instagram handle</string>\n    <string name=\"facebook_profile\">Facebook profile link</string>\n\n    <!--MESSAGING-->\n    <string name=\"send_message\">Send a Message</string>\n    <string name=\"send_message_hint\">Say hi</string>\n    <string name=\"messages_header\">Messages</string>\n    <string name=\"messages_subheader\">Keep in touch with each other : )</string>\n    <string name=\"chat_header\">Chat with %1$s</string>\n    <string name=\"long_string\">This is a very, very, very, very, very long string. It contains n characters for a somewhat large n.</string>\n    <string name=\"dummy_date\">Aug 25, 2021</string>\n    <string name=\"current_pear\">Current Pear</string>\n    <string name=\"default_week_stamp\">1 Week ago</string>\n    <string name=\"week_stamp\">%1$d Weeks ago</string>\n\n    <!--PROFILE-->\n    <string name=\"reach_me\">Reach me at %1$s</string>\n    <string name=\"basic_profile_info\">I study &lt;b>%1$s&lt;/b> in the class of &lt;b>%2$s&lt;/b>, and my home is in &lt;b>%3$s&lt;/b>! My pronouns are &lt;b>%4$s&lt;/b>.</string>\n\n    <!--SCHEDULING TIME-->\n    <string name=\"scheduling_time_header\">When are you free?</string>\n    <string name=\"next\">Next</string>\n    <string-array name=\"days_abbr\">\n        <item>Su</item>\n        <item>M</item>\n        <item>Tu</item>\n        <item>W</item>\n        <item>Th</item>\n        <item>F</item>\n        <item>Sa</item>\n    </string-array>\n    <string-array name=\"days_full_name\">\n        <item>sunday</item>\n        <item>monday</item>\n        <item>tuesday</item>\n        <item>wednesday</item>\n        <item>thursday</item>\n        <item>friday</item>\n        <item>saturday</item>\n    </string-array>\n    <string-array name=\"times\">\n        <item>9:00</item>\n        <item>1:00</item>\n        <item>5:00</item>\n        <item>9:30</item>\n        <item>1:30</item>\n        <item>5:30</item>\n        <item>10:00</item>\n        <item>2:00</item>\n        <item>6:00</item>\n        <item>10:30</item>\n        <item>2:30</item>\n        <item>6:30</item>\n        <item>11:00</item>\n        <item>3:00</item>\n        <item>7:00</item>\n        <item>11:30</item>\n        <item>3:30</item>\n        <item>7:30</item>\n        <item>12:00</item>\n        <item>4:00</item>\n        <item>8:00</item>\n        <item>12:30</item>\n        <item>4:30</item>\n        <item>8:30</item>\n    </string-array>\n    <string name=\"day_header\">Every %1$s</string>\n    <string name=\"morning\">Morning</string>\n    <string name=\"afternoon\">Afternoon</string>\n    <string name=\"evening\">Evening</string>\n    <string name=\"scheduling_time_button\">Next</string>\n\n    <!--SCHEDULING LOCATION-->\n    <string name=\"scheduling_place_header\">Where do you prefer?</string>\n    <string name=\"scheduling_place_subtitle\">pick three</string>\n    <string-array name=\"campus_locations\">\n        <item>Atrium Café</item>\n        <item>Café Jennie</item>\n        <item>Gimme Coffee</item>\n        <item>Goldie\\'s Café</item>\n        <item>Green Dragon</item>\n        <item>Libe Café</item>\n        <item>Mac\\'s Café</item>\n        <item>Martha\\'s Café</item>\n        <item>Mattin\\'s Café</item>\n        <item>Temple of Zeus</item>\n    </string-array>\n    <string-array name=\"collegetown_locations\">\n        <item>Kung Fu Tea</item>\n        <item>Starbucks</item>\n        <item>CTB</item>\n        <item>U Tea</item>\n    </string-array>\n    <string name=\"scheduling_place_button\">Finish</string>\n    <string name=\"campus\">Campus</string>\n    <string name=\"collegetown\">Collegetown</string>\n\n    <!--MATCH PAGE-->\n    <string name=\"match_header\">Weekly Pear</string>\n    <string name=\"match_loves\">You both love…</string>\n    <string name=\"match_shared_clubs\">You\\'re both part of…</string>\n    <string name=\"match_enjoys\">%1$s also enjoys…</string>\n    <string name=\"match_clubs\">%1$s is also part of…</string>\n    <string name=\"match_reach_out\">Reach Out!</string>\n    <string name=\"profile_basic_info_header\">The basics</string>\n    <string name=\"profile_interests_header\">Things I love</string>\n    <string name=\"profile_groups_header\">Groups I\\'m a part of</string>\n\n    <!--NO MATCH PAGE-->\n    <string name=\"no_match_header\">Meet your new Pear next Monday</string>\n    <string name=\"no_match_subheader\">\n        In the meantime, tell me when you\\'re\n        usually free to make meeting up easier!\n    </string>\n    <string name=\"no_match_availability\">Enter Availability</string>\n\n    <!--DRAWER MENU-->\n    <string name=\"edit_info\">Edit Info</string>\n    <string name=\"user_name\">%1$s %2$s</string>\n    <string name=\"user_hometown\">From %1$s</string>\n    <string name=\"user_major_year\">%1$s %2$s</string>\n    <string name=\"menu_groups\">Your groups</string>\n    <string name=\"menu_interests\">Your interests</string>\n    <string name=\"menu_prompts\">Your prompts</string>\n    <string name=\"menu_messages\">Messages</string>\n    <string name=\"settings\">Settings</string>\n    <string name=\"drawer_open\">Open navigation drawer menu</string>\n    <string name=\"drawer_close\">Close navigation drawer menu</string>\n\n    <!--MY PROFILE-->\n    <string name=\"save\">Save</string>\n    <string name=\"edit_availabilities\">Edit Availabilities</string>\n    <string name=\"edit_location\">Edit Location Preferences</string>\n    <string name=\"connect_social_media\">Connect Social Media</string>\n    <string name=\"about_pear\">About Pear</string>\n    <string name=\"log_out\">Log Out</string>\n\n    <string name=\"deselect\">tap to deselect</string>\n    <string name=\"more_items\">More %1$s</string>\n    <string name=\"tap_to_add\">tap to add</string>\n    <string name=\"view_other\">view your other %1$s</string>\n    <string name=\"view_fewer\">view fewer %1$s</string>\n    <string name=\"select_one_interest\">Select at least one interest so that we can better help you find a Pear!</string>\n    <string name=\"select_one_group\">Select a group so that we can better help you find a Pear!</string>\n\n    <string name=\"edit_availability\">Edit Availability</string>\n    <string name=\"edit_interests\">Edit Interests</string>\n    <string name=\"edit_groups\">Edit Groups</string>\n\n    <!--ABOUT-->\n    <string name=\"pear_creation_reason\">Pear was created to help Cornell students meet new people and form meaningful connections.</string>\n    <string name=\"get_paired\"><b>Get paired</b> up with a new Cornell student like you, every week.</string>\n    <string name=\"reach_out\"><b>Reach out</b> by sending over when and where you prefer, or choose from what your pair suggested.</string>\n    <string name=\"meet_at\"><b>Meet at</b> the chosen time and place, and now you have one new friend at Cornell!</string>\n    <string name=\"pause_pairings\">You can pause pairings at any time in Settings.</string>\n    <string name=\"send_feedback\">Send feedback</string>\n    <string name=\"visit_website\">Visit our website</string>\n    <string name=\"more_apps\">More apps</string>\n</resources>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision ebe2790ceeb5c92d946da83039a2121b5436bd67)
+++ b/app/src/main/res/values/strings.xml	(date 1645636210266)
@@ -225,6 +225,16 @@
     <string name="drawer_open">Open navigation drawer menu</string>
     <string name="drawer_close">Close navigation drawer menu</string>
 
+    <!--FEEDBACK MENU-->
+    <string name="feedback_send">Send feedback</string>
+    <string name="feedback_contact">Contact us</string>
+    <string name="feedback_report">Report user</string>
+    <string name="form_url">https://docs.google.com/forms/d/e/1FAIpQLSf49KRJQwugXqESmeRlZ8T6dSPHiZl-3BRA60WaOpMhmOjSeQ/viewform</string>
+    <string name="feedback_email">team@cornellappdev.com</string>
+    <string name="contact_email_subject">Pear Feedback</string>
+    <string name="report_email_subject">Report user</string>
+
+
     <!--MY PROFILE-->
     <string name="save">Save</string>
     <string name="edit_availabilities">Edit Availabilities</string>
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n\n    <!-- Base application theme. -->\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\n        <!-- Customize your theme here. -->\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n        <item name=\"colorAccent\">@color/colorAccent</item>\n    </style>\n\n    <style name=\"AppTheme.RoundedCornerMaterialButton\" parent=\"Widget.AppCompat.Button.Colored\">\n        <item name=\"android:background\">@drawable/rounded_shape</item>\n    </style>\n\n    <style name=\"noAnimTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">\n        <item name=\"android:windowAnimationStyle\">@null</item>\n    </style>\n\n    <style name=\"searchViewTheme\" parent=\"Widget.AppCompat.Light.SearchView\">\n        <item name=\"android:textColorHint\">@color/searchHint</item>\n        <item name=\"android:editTextColor\">@color/black</item>\n        <item name=\"android:fontFamily\">@font/circular_book</item>\n    </style>\n</resources>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
--- a/app/src/main/res/values/styles.xml	(revision ebe2790ceeb5c92d946da83039a2121b5436bd67)
+++ b/app/src/main/res/values/styles.xml	(date 1645627500368)
@@ -21,4 +21,12 @@
         <item name="android:editTextColor">@color/black</item>
         <item name="android:fontFamily">@font/circular_book</item>
     </style>
+
+    <style name="popUpTheme.PopupMenu" parent="Widget.AppCompat.PopupMenu">
+        <item name="android:textColor">@color/black</item>
+        <item name="android:fontFamily">@font/circular_book</item>
+        <item name="android:textAlignment">center</item>
+        <!--
+  <item name="android:background">@drawable/ic_popup_background</item>   -->
+    </style>
 </resources>
Index: app/src/main/res/layout/activity_scheduling.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/drawerLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:fitsSystemWindows=\"true\"\n    tools:openDrawer=\"start\">\n\n    <androidx.constraintlayout.widget.ConstraintLayout\n        android:id=\"@+id/activity_main\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"@color/background_green\">\n\n        <androidx.constraintlayout.widget.ConstraintLayout\n            android:id=\"@+id/headerLayout\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\">\n\n            <ImageButton\n                android:id=\"@+id/backButton\"\n                android:layout_width=\"10dp\"\n                android:layout_height=\"20dp\"\n                android:layout_marginStart=\"24dp\"\n                android:background=\"@drawable/ic_back_carrot\"\n                android:clickable=\"true\"\n                android:focusable=\"true\"\n                app:layout_constraintBottom_toBottomOf=\"@id/headerText\"\n                app:layout_constraintLeft_toLeftOf=\"parent\"\n                app:layout_constraintTop_toTopOf=\"@id/headerText\" />\n\n            <TextView\n                android:id=\"@+id/headerText\"\n                android:layout_width=\"0dp\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"70dp\"\n                android:layout_marginTop=\"60dp\"\n                android:layout_marginRight=\"70dp\"\n                android:fontFamily=\"@font/circular_medium\"\n                android:gravity=\"center\"\n                android:text=\"@string/no_match_header\"\n                android:textColor=\"@color/black\"\n                android:textSize=\"24sp\"\n                app:layout_constraintLeft_toLeftOf=\"parent\"\n                app:layout_constraintRight_toRightOf=\"parent\"\n                app:layout_constraintTop_toTopOf=\"parent\" />\n\n            <Button\n                android:id=\"@+id/save_button\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:background=\"@null\"\n                android:enabled=\"true\"\n                android:text=\"@string/save\"\n                android:textAllCaps=\"false\"\n                android:textColor=\"@color/save_button_text_color\"\n                android:textSize=\"20sp\"\n                android:visibility=\"gone\"\n                app:layout_constraintBottom_toBottomOf=\"@id/headerText\"\n                app:layout_constraintRight_toRightOf=\"parent\"\n                app:layout_constraintTop_toTopOf=\"@id/headerText\" />\n        </androidx.constraintlayout.widget.ConstraintLayout>\n\n\n        <FrameLayout\n            android:id=\"@+id/fragmentContainer\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_marginVertical=\"5dp\"\n            app:layout_constraintBottom_toTopOf=\"@id/primaryActionButton\"\n            app:layout_constraintTop_toBottomOf=\"@id/headerLayout\" />\n\n\n        <Button\n            android:id=\"@+id/primaryActionButton\"\n            style=\"?android:attr/borderlessButtonStyle\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"50dp\"\n            android:layout_marginBottom=\"60dp\"\n            android:background=\"@drawable/profile_button_background\"\n            android:elevation=\"3dp\"\n            android:enabled=\"true\"\n            android:fontFamily=\"@font/circular_medium\"\n            android:paddingLeft=\"30dp\"\n            android:paddingRight=\"30dp\"\n            android:text=\"@string/no_match_availability\"\n            android:textAllCaps=\"false\"\n            android:textColor=\"@color/white\"\n            android:textSize=\"20sp\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            app:layout_constraintLeft_toLeftOf=\"parent\"\n            app:layout_constraintRight_toRightOf=\"parent\" />\n    </androidx.constraintlayout.widget.ConstraintLayout>\n\n    <com.google.android.material.navigation.NavigationView\n        android:id=\"@+id/nav_view\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"start\"\n        android:background=\"@color/background_green\"\n        android:fitsSystemWindows=\"true\"\n        app:headerLayout=\"@layout/nav_header_profile\"\n        app:itemIconTint=\"@null\"\n        app:itemTextAppearance=\"@style/TextAppearance.AppCompat.Medium\"\n        app:itemTextColor=\"@color/black\"\n        app:menu=\"@menu/activity_scheduling_drawer\" />\n</androidx.drawerlayout.widget.DrawerLayout>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_scheduling.xml b/app/src/main/res/layout/activity_scheduling.xml
--- a/app/src/main/res/layout/activity_scheduling.xml	(revision ebe2790ceeb5c92d946da83039a2121b5436bd67)
+++ b/app/src/main/res/layout/activity_scheduling.xml	(date 1645571654055)
@@ -1,4 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
+
 <androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
@@ -63,6 +64,22 @@
                 app:layout_constraintBottom_toBottomOf="@id/headerText"
                 app:layout_constraintRight_toRightOf="parent"
                 app:layout_constraintTop_toTopOf="@id/headerText" />
+
+            <ImageButton
+                android:id="@+id/feedbackButton"
+                android:layout_width="26.67dp"
+                android:layout_height="26.67dp"
+                android:background="@drawable/ic_feedback_button"
+                android:layout_marginEnd="24dp"
+                android:paddingBottom="40dp"
+                android:clickable="true"
+                android:focusable="true"
+                app:layout_constraintBottom_toBottomOf="@id/headerText"
+                app:layout_constraintRight_toRightOf="parent"
+                app:layout_constraintTop_toTopOf="@id/headerText"
+                android:onClick="showPopup"
+                android:visibility="gone"/>
+
         </androidx.constraintlayout.widget.ConstraintLayout>
 
 
@@ -72,8 +89,9 @@
             android:layout_height="0dp"
             android:layout_marginVertical="5dp"
             app:layout_constraintBottom_toTopOf="@id/primaryActionButton"
-            app:layout_constraintTop_toBottomOf="@id/headerLayout" />
-
+            app:layout_constraintTop_toBottomOf="@id/headerLayout"
+            app:layout_constraintVertical_bias="1.0"
+            tools:layout_editor_absoluteX="145dp" />
 
         <Button
             android:id="@+id/primaryActionButton"
Index: .idea/runConfigurations.xml
===================================================================
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
deleted file mode 100644
--- a/.idea/runConfigurations.xml	(revision ebe2790ceeb5c92d946da83039a2121b5436bd67)
+++ /dev/null	(revision ebe2790ceeb5c92d946da83039a2121b5436bd67)
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RunConfigurationProducerService">
-    <option name="ignoredProducers">
-      <set>
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
-      </set>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_popup_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_popup_background.xml b/app/src/main/res/drawable/ic_popup_background.xml
new file mode 100644
--- /dev/null	(date 1645394163264)
+++ b/app/src/main/res/drawable/ic_popup_background.xml	(date 1645394163264)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="160dp"
+    android:height="141dp"
+    android:viewportWidth="160"
+    android:viewportHeight="141">
+  <path
+      android:pathData="M4,15C4,12.791 5.791,11 8,11H132L139.253,2.841C139.65,2.393 140.35,2.393 140.747,2.841L146.807,9.657C147.566,10.511 148.654,11 149.796,11H152C154.209,11 156,12.791 156,15V131C156,133.209 154.209,135 152,135H8C5.791,135 4,133.209 4,131V15Z"
+      android:fillColor="#ffffff"/>
+</vector>
Index: app/src/main/java/com/cornellappdev/coffee_chats_android/fragments/EditInterestsGroupsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cornellappdev.coffee_chats_android.fragments\n\nimport android.content.res.Resources\nimport android.os.Bundle\nimport android.util.TypedValue\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.LinearLayout\nimport android.widget.ListView\nimport androidx.fragment.app.Fragment\nimport com.cornellappdev.coffee_chats_android.OnFilledOutListener\nimport com.cornellappdev.coffee_chats_android.OnFilledOutObservable\nimport com.cornellappdev.coffee_chats_android.R\nimport com.cornellappdev.coffee_chats_android.adapters.UserFieldAdapter\nimport com.cornellappdev.coffee_chats_android.adapters.UserFieldAdapter.ItemColor\nimport com.cornellappdev.coffee_chats_android.models.UserField\nimport com.cornellappdev.coffee_chats_android.models.UserField.Category\nimport com.cornellappdev.coffee_chats_android.networking.getAllGroups\nimport com.cornellappdev.coffee_chats_android.networking.getAllInterests\nimport com.cornellappdev.coffee_chats_android.networking.getUser\nimport com.cornellappdev.coffee_chats_android.updateUserField\nimport kotlinx.android.synthetic.main.fragment_edit_interests.*\nimport kotlinx.android.synthetic.main.fragment_edit_interests.view.*\nimport kotlinx.android.synthetic.main.interest_group_list_with_header.view.*\nimport kotlinx.coroutines.CoroutineScope\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.launch\nimport kotlin.math.max\nimport kotlin.math.min\n\nclass EditInterestsGroupsFragment : Fragment(), OnFilledOutObservable {\n    private var isInterest = true\n    private lateinit var itemString: String\n    private val selectedItems = ArrayList<UserField>()\n    private val moreItems = ArrayList<UserField>()\n    private lateinit var selectedItemsAdapter: UserFieldAdapter\n    private lateinit var moreItemsAdapter: UserFieldAdapter\n\n    /** whether to display all selected items, or just the first 3 */\n    private var showExcessSelectedItems = false\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        arguments?.let {\n            isInterest = it.getBoolean(IS_INTEREST)\n            itemString = if (isInterest) \"interests\" else \"groups\"\n        }\n    }\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n        return inflater.inflate(R.layout.fragment_edit_interests, container, false)\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        selected_items.list_title.text =\n            getString(if (isInterest) R.string.menu_interests else R.string.menu_groups)\n        more_items.list_title.text = getString(R.string.more_items, itemString)\n        more_items.list_subtitle.text = getString(R.string.tap_to_add)\n\n        CoroutineScope(Dispatchers.Main).launch {\n            val user = getUser()\n            if (isInterest) {\n                val userInterests = user.interests\n                val allInterests = getAllInterests()\n                for (interest in allInterests) {\n                    val item = UserField(interest.name, interest.subtitle, interest.imageUrl, id = interest.id)\n                    if (interest in userInterests) {\n                        selectedItems.add(item)\n                    } else {\n                        moreItems.add(item)\n                    }\n                }\n            } else {\n                val userGroups = user.groups\n                val allGroups = getAllGroups()\n                for (group in allGroups) {\n                    val item = UserField(group.name, drawableUrl = group.imageUrl, id = group.id)\n                    if (group in userGroups) {\n                        selectedItems.add(item)\n                    } else {\n                        moreItems.add(item)\n                    }\n                }\n            }\n\n            selectedItemsAdapter =\n                UserFieldAdapter(requireContext(), selectedItems, ItemColor.GREEN, false)\n            selected_items.item_list.adapter = selectedItemsAdapter\n            moreItemsAdapter =\n                UserFieldAdapter(requireContext(), moreItems, ItemColor.WHITE, false)\n            more_items.item_list.adapter = moreItemsAdapter\n            view_other_items.setOnClickListener {\n                showExcessSelectedItems = !showExcessSelectedItems\n                updatePage()\n            }\n            selected_items.item_list.setOnItemClickListener { _, _, position, _ ->\n                moveItem(position, selectedItems, moreItems)\n            }\n            more_items.item_list.setOnItemClickListener { _, _, position, _ ->\n                moveItem(position, moreItems, selectedItems)\n            }\n            toggleSaveButton()\n            updatePage()\n        }\n    }\n\n    private fun updatePage() {\n        if (selectedItems.size > 3) {\n            view_other_items.visibility = View.VISIBLE\n            view_other_items.arrow.rotation = if (showExcessSelectedItems) 90f else 270f\n        } else {\n            view_other_items.visibility = View.GONE\n            showExcessSelectedItems = false\n        }\n        view_other_items.view_other_textview.text =\n            if (showExcessSelectedItems) getString(R.string.view_fewer, itemString)\n            else getString(R.string.view_other, itemString)\n        selected_items.list_subtitle.text = when {\n            selectedItems.isEmpty() && isInterest -> getString(R.string.select_one_interest)\n            selectedItems.isEmpty() && !isInterest -> getString(R.string.select_one_group)\n            else -> getString(R.string.deselect)\n        }\n        val numItemsShown =\n            if (showExcessSelectedItems) selectedItems.size else min(selectedItems.size, 3)\n        updateListViewHeight(selected_items.item_list, numItemsShown)\n        updateListViewHeight(more_items.item_list, moreItems.size)\n    }\n\n    /**\n     * Updates the height of `listView` to show `listSize` items. Use this if the entire page needs\n     * to scroll without the individually nested ListViews scrolling\n     */\n    private fun updateListViewHeight(listView: ListView, listSize: Int) {\n        listView.layoutParams = (listView.layoutParams as LinearLayout.LayoutParams).apply {\n            val displayMetrics = Resources.getSystem().displayMetrics\n            val cellHeight =\n                TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 80f, displayMetrics).toInt()\n\n            height = cellHeight * listSize\n            listView.requestLayout()\n            scrollView.requestLayout()\n        }\n    }\n\n    /**\n     * Moves item at position `pos` in `source` to `dest`, ensuring that items are sorted in\n     * alphabetical order, then updates the page to reflect changes\n     */\n    private fun moveItem(\n        pos: Int,\n        source: ArrayList<UserField>,\n        dest: ArrayList<UserField>\n    ) {\n        val item = source.removeAt(pos)\n        // find insertion index that preserves alphabetical order\n        val index = max(dest.indexOfLast { i -> i.getText() < item.getText() } + 1, 0)\n        dest.add(index, item)\n        selectedItemsAdapter.notifyDataSetChanged()\n        moreItemsAdapter.notifyDataSetChanged()\n        toggleSaveButton()\n        updatePage()\n    }\n\n    /** Enables or disables the Save button based on the number of selected items */\n    private fun toggleSaveButton() {\n        if (selectedItems.isEmpty()) {\n            callback!!.onSelectionEmpty()\n        } else {\n            callback!!.onFilledOut()\n        }\n    }\n\n    companion object {\n        /**\n         * Use this factory method to create a new instance of\n         * this fragment using the provided parameters.\n         *\n         * @param isInterest whether this fragment edits a group or interest\n         * @return A new instance of fragment EditInterestsGroupsFragment\n         */\n        @JvmStatic\n        fun newInstance(isInterest: Boolean) =\n            EditInterestsGroupsFragment().apply {\n                arguments = Bundle().apply {\n                    putBoolean(IS_INTEREST, isInterest)\n                }\n            }\n\n        private const val IS_INTEREST = \"isInterest\"\n    }\n\n    private var callback: OnFilledOutListener? = null\n\n    override fun setOnFilledOutListener(callback: OnFilledOutListener) {\n        this.callback = callback\n    }\n\n    override fun saveInformation() {\n        val idList = selectedItems.map { it.id }\n        updateUserField(\n            requireContext(),\n            idList,\n            if (isInterest) Category.INTEREST else Category.GROUP\n        )\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cornellappdev/coffee_chats_android/fragments/EditInterestsGroupsFragment.kt b/app/src/main/java/com/cornellappdev/coffee_chats_android/fragments/EditInterestsGroupsFragment.kt
--- a/app/src/main/java/com/cornellappdev/coffee_chats_android/fragments/EditInterestsGroupsFragment.kt	(revision ebe2790ceeb5c92d946da83039a2121b5436bd67)
+++ b/app/src/main/java/com/cornellappdev/coffee_chats_android/fragments/EditInterestsGroupsFragment.kt	(date 1645571505465)
@@ -20,6 +20,7 @@
 import com.cornellappdev.coffee_chats_android.networking.getAllInterests
 import com.cornellappdev.coffee_chats_android.networking.getUser
 import com.cornellappdev.coffee_chats_android.updateUserField
+import kotlinx.android.synthetic.main.activity_scheduling.*
 import kotlinx.android.synthetic.main.fragment_edit_interests.*
 import kotlinx.android.synthetic.main.fragment_edit_interests.view.*
 import kotlinx.android.synthetic.main.interest_group_list_with_header.view.*
@@ -37,6 +38,7 @@
     private lateinit var selectedItemsAdapter: UserFieldAdapter
     private lateinit var moreItemsAdapter: UserFieldAdapter
 
+
     /** whether to display all selected items, or just the first 3 */
     private var showExcessSelectedItems = false
 
Index: app/src/main/res/menu/feedback_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/feedback_menu.xml b/app/src/main/res/menu/feedback_menu.xml
new file mode 100644
--- /dev/null	(date 1645627047720)
+++ b/app/src/main/res/menu/feedback_menu.xml	(date 1645627047720)
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <group android:id="@+id/group_delete">
+
+        <item
+            android:id="@+id/nav_send_feedback"
+            android:title="@string/feedback_send"
+           />
+
+        <item
+            android:id="@+id/nav_contact_us"
+            android:title="@string/feedback_contact"
+            />
+        <item
+            android:id="@+id/nav_report_user"
+            android:title="@string/feedback_report"
+            />
+    </group>
+
+</menu>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision ebe2790ceeb5c92d946da83039a2121b5436bd67)
+++ b/.idea/misc.xml	(date 1645566187487)
@@ -1,6 +1,50 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="DesignSurface">
+    <option name="filePathToZoomLevelMap">
+      <map>
+        <entry key="app/src/main/res/drawable/ic_back_carrot.xml" value="0.2625" />
+        <entry key="app/src/main/res/drawable/ic_feedback_button.xml" value="0.2625" />
+        <entry key="app/src/main/res/drawable/ic_vector.xml" value="0.2222222222222222" />
+        <entry key="app/src/main/res/layout/activity_messaging.xml" value="0.18958333333333333" />
+        <entry key="app/src/main/res/layout/activity_onboarding.xml" value="0.3920539423640272" />
+        <entry key="app/src/main/res/layout/activity_scheduling.xml" value="0.335" />
+        <entry key="app/src/main/res/layout/activity_sign_in.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/chat_cell.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/fragment_about.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/fragment_chat.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/fragment_edit_interests.xml" value="0.335" />
+        <entry key="app/src/main/res/layout/fragment_edit_profile.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/fragment_interests_groups.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/fragment_match.xml" value="0.25" />
+        <entry key="app/src/main/res/layout/fragment_messages.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/fragment_no_match.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/fragment_profile.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/fragment_scheduling_place.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/fragment_scheduling_time.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/fragment_settings.xml" value="0.1734375" />
+        <entry key="app/src/main/res/layout/fragment_social_media.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/group_view.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/interest_group_list_with_header.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/interest_view.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/location_scheduling_places_layout.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/message_cell.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/nav_drawer_item.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/pill_view.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/profile_spinner_item.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/prompt_response_view.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/prompt_with_response_item.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/style.xml" value="0.11614583333333334" />
+        <entry key="app/src/main/res/layout/time_option_item.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/layout/time_scheduling_day_layout.xml" value="0.14356884057971014" />
+        <entry key="app/src/main/res/menu/activity_scheduling_drawer.xml" value="0.165" />
+        <entry key="app/src/main/res/menu/feedback_menu.xml" value="0.335" />
+        <entry key="app/src/main/res/menu/settings.xml" value="0.27794871794871795" />
+      </map>
+    </option>
+  </component>
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="11" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/res/drawable/ic_feedback_button.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_feedback_button.xml b/app/src/main/res/drawable/ic_feedback_button.xml
new file mode 100644
--- /dev/null	(date 1645053555287)
+++ b/app/src/main/res/drawable/ic_feedback_button.xml	(date 1645053555287)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="28dp"
+    android:height="28dp"
+    android:viewportWidth="28"
+    android:viewportHeight="28">
+  <path
+      android:pathData="M13.0533,18.3867C12.996,18.45 12.9426,18.5168 12.8933,18.5867C12.8429,18.661 12.8025,18.7417 12.7733,18.8267C12.7349,18.9022 12.7079,18.9831 12.6933,19.0667C12.6868,19.1554 12.6868,19.2446 12.6933,19.3333C12.6888,19.5082 12.7254,19.6817 12.8,19.84C12.8599,20.0055 12.9554,20.1557 13.0798,20.2801C13.2043,20.4046 13.3545,20.5001 13.52,20.56C13.6796,20.6305 13.8522,20.667 14.0267,20.667C14.2012,20.667 14.3737,20.6305 14.5333,20.56C14.6988,20.5001 14.8491,20.4046 14.9735,20.2801C15.0979,20.1557 15.1935,20.0055 15.2533,19.84C15.3125,19.6779 15.3397,19.5058 15.3333,19.3333C15.3343,19.1578 15.3007,18.9839 15.2344,18.8214C15.168,18.659 15.0702,18.5112 14.9467,18.3867C14.8227,18.2617 14.6752,18.1625 14.5128,18.0948C14.3503,18.0271 14.176,17.9923 14,17.9923C13.824,17.9923 13.6497,18.0271 13.4872,18.0948C13.3248,18.1625 13.1773,18.2617 13.0533,18.3867ZM14,0.6667C11.3629,0.6667 8.7851,1.4486 6.5924,2.9137C4.3997,4.3788 2.6908,6.4612 1.6816,8.8975C0.6724,11.3339 0.4084,14.0148 0.9229,16.6012C1.4373,19.1876 2.7072,21.5634 4.5719,23.4281C6.4366,25.2928 8.8124,26.5627 11.3988,27.0771C13.9852,27.5916 16.6661,27.3276 19.1024,26.3184C21.5388,25.3092 23.6212,23.6002 25.0863,21.4076C26.5513,19.2149 27.3333,16.6371 27.3333,14C27.3333,12.249 26.9885,10.5152 26.3184,8.8975C25.6483,7.2799 24.6662,5.81 23.4281,4.5719C22.19,3.3338 20.7201,2.3517 19.1024,1.6816C17.4848,1.0115 15.751,0.6667 14,0.6667ZM14,24.6667C11.8903,24.6667 9.828,24.0411 8.0739,22.869C6.3198,21.6969 4.9526,20.031 4.1453,18.0819C3.3379,16.1329 3.1267,13.9882 3.5383,11.919C3.9499,9.8499 4.9658,7.9493 6.4575,6.4575C7.9493,4.9658 9.8499,3.9499 11.919,3.5383C13.9882,3.1267 16.1329,3.3379 18.082,4.1453C20.031,4.9526 21.6969,6.3198 22.869,8.0739C24.0411,9.828 24.6667,11.8903 24.6667,14C24.6667,16.829 23.5429,19.5421 21.5425,21.5425C19.5421,23.5429 16.829,24.6667 14,24.6667ZM14,7.3333C13.2974,7.3329 12.6071,7.5175 11.9985,7.8686C11.39,8.2197 10.8846,8.7249 10.5333,9.3333C10.4369,9.4851 10.3721,9.6548 10.3429,9.8322C10.3137,10.0097 10.3207,10.1912 10.3635,10.3658C10.4063,10.5405 10.484,10.7047 10.5918,10.8486C10.6997,10.9924 10.8356,11.113 10.9913,11.203C11.147,11.293 11.3193,11.3505 11.4978,11.3722C11.6763,11.3939 11.8573,11.3793 12.0301,11.3292C12.2028,11.2791 12.3635,11.1945 12.5027,11.0807C12.6419,10.9668 12.7566,10.826 12.84,10.6667C12.9575,10.4632 13.1266,10.2944 13.3303,10.1773C13.534,10.0602 13.7651,9.9991 14,10C14.3536,10 14.6928,10.1405 14.9428,10.3905C15.1929,10.6406 15.3333,10.9797 15.3333,11.3333C15.3333,11.6869 15.1929,12.0261 14.9428,12.2761C14.6928,12.5262 14.3536,12.6667 14,12.6667C13.6464,12.6667 13.3072,12.8071 13.0572,13.0572C12.8071,13.3072 12.6667,13.6464 12.6667,14V15.3333C12.6667,15.6869 12.8071,16.0261 13.0572,16.2761C13.3072,16.5262 13.6464,16.6667 14,16.6667C14.3536,16.6667 14.6928,16.5262 14.9428,16.2761C15.1929,16.0261 15.3333,15.6869 15.3333,15.3333V15.0933C16.2152,14.7734 16.9565,14.1536 17.4277,13.3425C17.8989,12.5313 18.0701,11.5804 17.9112,10.6558C17.7523,9.7313 17.2736,8.892 16.5587,8.2847C15.8437,7.6773 14.9381,7.3406 14,7.3333Z"
+      android:fillColor="#176027"/>
+</vector>
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"CompilerConfiguration\">\n    <bytecodeTargetLevel target=\"1.8\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision ebe2790ceeb5c92d946da83039a2121b5436bd67)
+++ b/.idea/compiler.xml	(date 1643665308000)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="1.8" />
+    <bytecodeTargetLevel target="11" />
   </component>
 </project>
\ No newline at end of file
